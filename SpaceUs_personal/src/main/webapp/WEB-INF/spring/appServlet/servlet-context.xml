<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<context:component-scan base-package="com.kh.spaceus" />
	<!-- Handler Interceptor 등록 -->
	<interceptors>
		<interceptor>
			<!-- 모든 경로의 요청에 적용 -->
			<mapping path="/**"/>
			<beans:bean class="com.kh.spaceus.common.interceptor.LoggerInterceptor"
						id="loggerInterceptor"/>
		</interceptor>
		
		<!-- referer 인터셉터 설정 -->
		<!-- <interceptor>
			<mapping path="/member/memberLogin.do"/>
			<mapping path="/callback"/>
			<mapping path="/member/kakaoLogin.do"/>
			<mapping path="/member/googleLogin.do"/>
			<beans:bean class="com.kh.spaceus.common.interceptor.RefererInterceptor"
						id="RefererInterceptor"/>
		</interceptor> -->
		<!-- <interceptor>
			<mapping path="/space/insertSpace.do"/>
			<mapping path="/community/recruit/recruitEnrollForm.do"/>
			이 요청에 대한 것은 제외
			<exclude-mapping path="/board/boardList.do"/>
			<beans:bean class="com.kh.spaceus.common.interceptor.LoginInterceptor"
						id="LoginInterceptor"/>
		</interceptor> -->
	</interceptors>
	<!-- aop 어노테이션 처리용 -->
	<aop:aspectj-autoproxy />
	
	<!-- file upload를 처리할 빈 등록 : id - multipartResolver -->
	<beans:bean id="multipartResolver"
				class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean>
	
	<!-- jsonView 빈등록 및 BeanNameViewResolver 등록 -->
	<beans:bean class="net.sf.json.spring.web.servlet.view.JsonView"
				id="jsonView"/>
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
					id="viewResolver">
		<!-- 우선순위 지정 -->
				<beans:property name="order" value="1" />	
	</beans:bean>
	<!-- @Responsebody사용 관련 빈등록 (스프링 5.x.x => MappingJackson2HttpMessageConverter) -->
	<!-- mvc:annotation-driven 태그에 의해 자동 처리되므로 생략가능 -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter"/>
                <beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- 네이버로그인 -->
	<beans:bean id="naverLoginBO" class="com.kh.spaceus.social.NaverLoginBO" />
	<!-- <beans:bean id="excelDownload" class="com.kh.spaceus.host.controller.HostController"/> -->
	<context:component-scan base-package="com.kh.spaceus.scheduler" />
    <task:scheduler id="jobScheduler" pool-size="10" /> 
    <task:annotation-driven scheduler="jobScheduler" />
    
    

</beans:beans>
   