<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
  
   <!-- #8.1 암호화 처리 BCryptPasswordEncoder 등록 -->
   <beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"
        id="bcryptPasswordEncoder"/>
   
   <!-- #8.3 사용자 요청 url 관련 설정 -->
   <http auto-config="true" use-expressions="true">      
   
      <intercept-url pattern="/" access="permitAll"/>
      <intercept-url pattern="/index.jsp" access="permitAll"/>
      <intercept-url pattern="/resources/**" access="permitAll"/>
      <intercept-url pattern="/assets/**" access="permitAll"/> 
      <intercept-url pattern="/member/**" access="permitAll"/>
      <intercept-url pattern="/aboutus/**" access="permitAll"/>
      <intercept-url pattern="/space/**" access="permitAll"/>
      <intercept-url pattern="/community/recruit/**" access="permitAll"/>
      <intercept-url pattern="/community/group/**" access="permitAll"/>
      <intercept-url pattern="/space/spaceDetail.do" access="permitAll"/>
      <intercept-url pattern="/space/searchSpace.do" access="permitAll"/>
   
      <intercept-url pattern="/**" access="permitAll"/>      
      
      <!-- 시큐리티 로그인 
      default-target-url="/member/memberLogin.do -->
      
       <form-login
         login-page="/member/memberLoginForm.do"
         login-processing-url="/member/memberLogin.do"
         username-parameter="memberEmail"
         password-parameter="password"
         authentication-failure-forward-url="/member/memberLoginFailure.do"
       /> 
       
     
      <logout
         invalidate-session="true"
         logout-url="/member/memberLogout.do"
         logout-success-url="/"
       /> 
      
   
      
      <!-- 모든 post요청에 csrf토큰값 인증사용 -->
      <!-- ajax post요청시 403에러 처리 -->
      <csrf disabled="true"/>
   
       <headers>
           <frame-options disabled="true"></frame-options>
       </headers>
         
   </http>
   

   <!-- #8.4 사용자 인증 -->
   <authentication-manager>
       <!-- <authentication-provider>
         <password-encoder ref="bcryptPasswordEncoder"/>
         1. in-memory 사용자 인증
         <user-service>
            <user name="honggd"
                  password="$2a$10$vY8lYMy7Xt.Qz9sTUH4V6uu2tYllGHtM2ehm39at.sbIVo4JBW4Ta" 
                  authorities="ROLE_USER"
                  />
            <user name="admin"
                  password="$2a$10$vY8lYMy7Xt.Qz9sTUH4V6uu2tYllGHtM2ehm39at.sbIVo4JBW4Ta" 

                  authorities="ROLE_ADMIN"
                  />
            <user name="host"
                  password="$2a$10$vY8lYMy7Xt.Qz9sTUH4V6uu2tYllGHtM2ehm39at.sbIVo4JBW4Ta"
                  authorities="ROLE_HOST"/>
         </user-service>
      </authentication-provider> -->
      <!-- UserDetails 구현체를 통해 db에서 인증하기 -->
       <authentication-provider user-service-ref="securityService">
         <password-encoder ref="bcryptPasswordEncoder"/>   
      </authentication-provider>
   </authentication-manager>
   
   
   <context:component-scan base-package="com.kh.security" />
</beans:beans>
