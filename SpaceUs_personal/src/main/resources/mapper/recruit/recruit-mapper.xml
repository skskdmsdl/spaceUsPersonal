<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="recruit">
	
	<select id="selectRecruitList" resultMap="recruitMap">
		select
			R.*,
			(select count(*) from recruit_comment where recruit_no = R.recruit_no) commentCnt
		from
			recruit R
		order by
			enroll_date desc
	</select>
	<resultMap id="recruitMap" type="recruit">
		<id column="recruit_no" property="no"/>
		<result column="member_email" property="email"/>
		<result column="nickname" property="nickName"/>
		<result column="view_cnt" property="viewCnt"/>
		<result column="header" property="header"/>
		<result column="content" property="content"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="report_cnt" property="reportCnt"/>
		<result column="commentCnt" property="commentCnt"/>
	</resultMap>
	
	<select id="selectRecruitTotalContents" resultType="_int">
	    select 
	    	count(*) 
	    from 
	    	recruit	
	</select>
	
	<insert id="insertRecruit" >
		insert into 
			recruit 
		values(
			'R'||seq_recruit_no.nextval,
			#{email},
			#{nickName},
			default,
			default,
			#{title},
			#{content},
			default,
			#{header}
		)
	</insert>
	
    <select id="selectOneRecruit" resultMap="recruitMap">
		select 
		   *
		from 
		   recruit
		where
			recruit_no = #{no}
	</select>  
	
	<update id="updateRecruit">
		update 
			recruit 
		set 
			header = #{ header }, 
			content = #{ content }, 
			title = #{ title } 
		where 
			recruit_no = #{ no }
	</update>
	
	<delete id="deleteRecruit">
        delete from 
        	recruit 
     	where 
     		recruit_no = #{no} 
    </delete>
    
    <!-- 신고된 적이 있는지 없는지 조회 -->
	<select id="selectOneReport" resultMap="reportReportMap">
		select
			*
		from
			report
		where
			member_email = #{memberEmail} 
			and board_no = #{boardNo}
	</select>
	 <resultMap type="reportRecruit" id="reportReportMap">
	
	</resultMap> 
	
	<insert id="insertReport">
		insert into
			report
		values (
			#{memberEmail},
			#{boardNo},
			#{reportReason}
		)
	</insert>
	
	<update id="updateReport">
		update 
			recruit
		set
			report_cnt = report_cnt + 1
		where
			recruit_no = #{no}
	</update>
	
	<update id="increaseRecruitReadCnt">
		update 
			recruit
		set
			view_cnt = view_cnt + 1
		where
			recruit_no = #{no}
	</update>
	
	<insert id="insertComment">
		insert into
			recruit_comment (
				recruit_comment_no,
				writer,
				recruit_no,
				secret,
				recruit_comment_content,
				recruit_comment_ref,
				recruit_comment_level
			)
		values (
			'RCOMMENT'||seq_recruit_comment_no.nextval,
			#{nickName},
			#{recruitNo},
			#{secret},
			#{content},
			#{commentRef},
			#{level}
		)
	</insert>
	
	<select id="selectCommentList" resultMap="CommentMap">
		select 
		    RC.*,
		    (select member_email from member where nickname= RC.writer) email,
		    cr.board_comment_no,
		    cr.member_email
		from 
		    recruit_comment RC 
		    left join 
		    (select * from com_report where member_email=#{ reporter }) CR 
		    on RC.recruit_comment_no = CR.board_comment_no
		where 
			recruit_no = #{ no } 
			start with recruit_comment_level = 1 
			connect by prior recruit_comment_no = recruit_comment_ref 
		order siblings by recruit_comment_date desc	
	</select>
	<resultMap type="recruitComment" id="CommentMap">
		<id column="recruit_comment_no" property="no"/>
		<result column="writer" property="nickName"/>
		<result column="email" property="email"/>
		<result column="recruit_no" property="recruitNo"/>
		<result column="secret" property="secret"/>
		<result column="recruit_comment_ref" property="commentRef"/>
		<result column="recruit_comment_content" property="content"/>
		<result column="recruit_comment_level" property="level"/>
		<result column="recruit_comment_date" property="date"/>
		<result column="member_email" property="reporter"/>
		<result column="board_comment_no" property="boardCommentNo"/>
	</resultMap>

	<update id="updateComment">
		update 
			recruit_comment
		set
			recruit_comment_content = #{content}
		where
			recruit_comment_no = #{no}
	</update>

	<delete id="deleteComment">
		delete from 
			recruit_comment
		where
			recruit_comment_no = #{commentNo}
	</delete>

	<select id="selectCommentTotalContents" resultType="_int">
	    select 
	    	count(*) 
	    from 
	    	recruit_comment
	    where 
	    	recruit_no = #{no} 	
	</select>
	
	<insert id="insertReportComment">
		insert into
			com_report
		values (
			#{email},
			#{boardCommentNo}
		)
	</insert>
	
	<select id="searchRecruit" resultMap="recruitMap">
		select
			R.*,
			(select count(*) from recruit_comment where recruit_no = R.recruit_no) commentCnt
		from
			recruit R
		where
			title like '%'||#{keyWord}||'%'
		order by
			enroll_date desc
	</select>
	
	<select id="selectRecruitTotalSearch" resultType="_int">
	    select 
	    	count(*) 
	    from 
	    	recruit	
	    where
	    	title like '%'||#{keyWord}||'%'
	</select>
	
	<select id="recruitHeaderSearch" resultMap="recruitMap">
		select
			R.*,
			(select count(*) from recruit_comment where recruit_no = R.recruit_no) commentCnt
		from
			recruit R
		where
			header = #{header}
		order by
			enroll_date desc
	</select>
	
	<select id="selectRecruitTotalHeader" resultType="_int">
	    select 
	    	count(*) 
	    from 
	    	recruit	
	    where
	    	header = #{header}
	</select>
	
	<select id="selectHostUseRevTotalContents" resultType="_int">
	    select 
	    	count(*) 
	    from 
	    	recruit	
	</select>
	

</mapper>











